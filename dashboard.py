import json
import pandas as pd
import streamlit as st
from streamlit_autorefresh import st_autorefresh
import plotly.express as px
import plotly.graph_objects as go

st.set_page_config(page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ß–∞—Ç-–ë–æ—Ç–∞", page_icon="ü§ñ", layout="wide")

time_interval = 10
st_autorefresh(interval=time_interval * 1000, key="data_refresh")

def load_data():
    with open("logs.json", "r", encoding="utf-8") as file:
        return json.load(file)

def process_data(data):
    df = pd.DataFrame(data)
    df["has_chat_history"] = df["chat_history"].apply(lambda x: len(x.get("old_questions", [])) > 0)
    df["response_time"] = pd.to_numeric(df["–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏"], errors="coerce")
    return df

class Plots:
    def __init__(self, data):
        self.data = data

    def plot_pie_chart(self, column, title):
        counts = self.data[column].value_counts()
        fig = px.pie(names=counts.index, values=counts.values, title=title, hole=0.4, color_discrete_sequence=px.colors.sequential.RdBu)
        st.plotly_chart(fig)

    def plot_bar_chart(self, column, title, x_label, y_label):
        counts = self.data[column].value_counts()
        fig = px.bar(x=counts.index, y=counts.values, labels={'x': x_label, 'y': y_label}, title=title, text_auto=True, color_discrete_sequence=px.colors.qualitative.Vivid)
        st.plotly_chart(fig)

    def plot_response_time_chart_with_campus(self):
        avg_response_time = self.data.groupby("–ö–∞–º–ø—É—Å")["response_time"].mean().reset_index()
        fig = px.bar(avg_response_time, x="–ö–∞–º–ø—É—Å", y="response_time", title="–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –ø–æ –∫–∞–º–ø—É—Å–∞–º", color="–ö–∞–º–ø—É—Å", text_auto=True, color_discrete_sequence=px.colors.qualitative.Set3)
        st.plotly_chart(fig)

    def plot_response_time_chart_line(self):
        fig = go.Figure()
        fig.add_trace(go.Scatter(x=self.data.index, y=self.data["response_time"], mode='lines+markers', name='–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞', line=dict(width=2)))
        fig.update_layout(title="–î–∏–Ω–∞–º–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏", xaxis_title="–ó–∞–ø—Ä–æ—Å—ã", yaxis_title="–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ (—Å–µ–∫)")
        st.plotly_chart(fig)

    def plot_follow_up_pie_chart(self):
        follow_ups = self.data["has_chat_history"].mean()
        fig = px.pie(names=["–ë–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏–π", "–° —É—Ç–æ—á–Ω–µ–Ω–∏—è–º–∏"], values=[1 - follow_ups, follow_ups], title="–ü—Ä–æ—Ü–µ–Ω—Ç —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", hole=0.3, color_discrete_sequence=px.colors.qualitative.Pastel)
        st.plotly_chart(fig)

if __name__ == "__main__":
    data = load_data()
    df = process_data(data)

    graphs = Plots(df)

    st.markdown("""
        <h1 style='text-align: center;'>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞—á–µ—Å—Ç–≤–∞ —á–∞—Ç-–±–æ—Ç–∞</h1>
    """, unsafe_allow_html=True)

    col1, col2 = st.columns(2)
    with col1:
        st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–∞–º–ø—É—Å–∞–º")
        graphs.plot_pie_chart("–ö–∞–º–ø—É—Å", "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–∞–º–ø—É—Å–∞–º")
    with col2:
        st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—è–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è")
        graphs.plot_pie_chart("–£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è", "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—è–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è")

    st.subheader("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤")
    graphs.plot_bar_chart("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤–æ–ø—Ä–æ—Å–∞", "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")

    col3, col4 = st.columns(2)
    with col3:
        st.subheader("–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –ø–æ –∫–∞–º–ø—É—Å–∞–º")
        graphs.plot_response_time_chart_with_campus()
    with col4:
        st.subheader("–î–∏–Ω–∞–º–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞")
        graphs.plot_response_time_chart_line()

    st.subheader("–ß–∞—Å—Ç–æ—Ç–∞ —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")
    graphs.plot_follow_up_pie_chart()
